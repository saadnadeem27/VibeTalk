def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
// START: FlutterFire Configuration
apply plugin: 'com.google.gms.google-services'
// END: FlutterFire Configuration
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    // Namespace required by AGP 7.0+ / 8.x. Keep it in sync with applicationId.
    namespace 'com.example.flash_chat'
    // Use a compileSdkVersion compatible with the AndroidX libraries in use.
    // Updated to 35 because several dependencies require compileSdk >= 35.
    compileSdkVersion 35
    // If you want to pin a specific NDK, keep flutter.ndkVersion; otherwise it can be omitted.
    ndkVersion flutter.ndkVersion

    compileOptions {
        // Use Java 17 to match modern Kotlin/AGP; AGP 8+ supports Java 17 toolchain.
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        // Enable core library desugaring for newer library support on older devices.
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        // Match jvm target with Java toolchain
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.flash_chat"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
    minSdkVersion 23
    targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    // Core library desugaring for backporting Java 8+ APIs (and parts of Kotlin stdlib)
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.0.3"
}
